<analysis>
This trajectory details the AI engineer's extensive work on the Claire et Marcus PWA, primarily focusing on fixing and enhancing Facebook and Instagram integration. Key challenges included migrating from the deprecated Instagram Basic Display API to the Instagram Graph API 2025, navigating complex Facebook Login for Business configurations, and resolving persistent Sorry, something went wrong and Invalid Scopes errors. The engineer systematically addressed issues such as incorrect redirect URIs, missing OAuth parameters (), and outdated scopes. Significant effort was also directed at improving the frontend UI: fixing post display, implementing a dynamic month-collapsing logic, and ensuring the website analysis and social connection statuses loaded and displayed correctly. The work culminated in diagnosing why connections weren't being saved in the database despite successful user authorization, indicating a deeper backend callback or routing issue.
</analysis>
<product_requirements>
The Claire et Marcus PWA aims to automate social media for small businesses by generating Instagram calendars with visuals, text, and scheduling. Content generation is based on business profiles, website analysis, user uploads, and notes, prioritizing balanced, audience-specific content. Key features include post modification, visual attachment (library, Pixabay, upload), carousel support, and monthly collapsible sections for content organization. Initial requests included fixing Instagram integration by migrating to Facebook Login for Business, managing photos, using OpenAI GPT-4o with Claude Sonnet 4 as backup, and implementing an intelligent LLM selection strategy for website analysis and storytelling. UI fixes were also requested for the header, ensuring direct access to business profile fields, and a fictitious 90-second progress bar for website analysis. The ultimate goal is automatic post publication on Facebook and Instagram, requiring robust social media account connectivity and a seamless user experience.
</product_requirements>
<key_technical_concepts>
-   **Full-stack Development**: React.js (Frontend), FastAPI (Backend), MongoDB (Database).
-   **LLM Integration**: OpenAI GPT-4o, Anthropic Claude Sonnet 4, intelligent LLM orchestration.
-   **Authentication/Authorization**: JWT, OAuth 2.0 (Facebook Login for Business, Instagram Graph API 2025).
-   **Data Management**: MongoDB collections (e.g., ), UUIDs, environment variables, async/sync handling.
-   **Deployment**: Kubernetes Ingress rules, supervisor, environment variable configuration ().
-   **UI/UX**: Tailwind CSS, React state management, dynamic content rendering.
</key_technical_concepts>
<code_architecture>

-   ****: Main FastAPI application handling all backend routes.
    -   **Importance**: Critical for authentication, social media integration, and content generation.
    -   **Changes Made**: Instagram OAuth updated for Graph API 2025 (endpoints, scopes). Facebook Login for Business integration refined multiple times to use correct endpoints, scopes (, , , ), and parameters (e.g.,  added, then removed, specific business-focused parameters attempted and reverted). Callback () adjusted to handle GET requests with  parameter, extract  from OAuth , and save social connections to MongoDB. Temporary endpoints added for testing/debugging (, , , ).
-   ****: Handles AI-driven social media post generation.
    -   **Importance**: Orchestrates LLM outputs for tailored social media posts based on user content.
    -   **Changes Made**:  modified to prioritize media specific to the target month for post generation. Logic initiated to group carousel images by  to generate single carousel posts instead of multiple individual posts.
-   ****: Manages scheduled background tasks.
    -   **Importance**: Designed for automation, including monthly updates.
    -   **Changes Made**:  function added and integrated into the main scheduler loop to manage month-based content archiving and new month generation (triggered on 1st of month at 1h UTC).
-   ****: Backend environment variables.
    -   **Importance**: Stores critical configuration, including , , and Facebook/Instagram credentials.
    -   **Changes Made**:  and  were frequently adjusted between preview () and production () URLs to manage testing and deployment environments.
-   ****: Main React component managing global state, authentication, and UI rendering.
    -   **Importance**: Central to user interaction, displaying business profiles, website analysis, social feeds, and post generation.
    -   **Changes Made**:
        *   **Social Connections**:  function added. Handled  in the callback.  integrated to run on app mount and when navigating to the Social tab to update connection status.  included in OAuth state for backend processing.
        *   **Post Display**: Refactored  and  to implement new monthly collapsing logic (current/next month open, others collapsed; past months in Archives). Responsive styling added to post generation buttons and text display (, , , ).
        *   **Post Generation Popup**: Restored and modified to show a checklist of prerequisites. Updated to use month-specific counts for notes () and media () instead of global totals.
        *   **Website Analysis Loading**:  added to  for automatic loading on login.  adjusted and a  fallback added to address React timing issues where  state wasn't immediately available.
        *   **Spinners**:  was changed to  (a per-month state) to ensure only the clicked month's button showed a spinner.
        *   **Message Listener**: Added a listener for  messages from the OAuth callback.
-   ****: Frontend styling.
    -   **Importance**: Controls the visual presentation of the application.
    -   **Changes Made**: Added CSS for  utility classes to manage text overflow in post previews.
-   ****: New documentation file.
    -   **Importance**: Provides user instructions for configuring the Facebook Developer App.
    -   **Changes Made**: Created to guide the user on necessary steps for Instagram Graph API 2025 integration.
</code_architecture>
<pending_tasks>
-   Investigate why social connections are not being saved in the database despite successful Facebook authorization (current focus).
-   Implement the Valider (Validate) button to trigger automatic post publication on Instagram.
-   Implement the full scheduling system for automated publications.
-   Implement the analytics dashboard for published posts.
-   Diagnose and fix the carousel deletion issue (if still present).
-   Diagnose and fix the recurring photo modification issue (blue question mark).
-   Work with the infrastructure team to resolve the external proxy/cache issue.
-   Finalize the carousel display logic (grey placeholder instead of first image).
</pending_tasks>
<current_work>
Immediately before this summary request, the AI engineer was actively troubleshooting a critical issue where, despite a successful Facebook Login for Business authorization flow (user was able to select My Own Watch page and was redirected to ), the application's Social tab still displayed Connecter buttons instead of showing a Connecté status with the connected page.

Initial diagnosis revealed that the backend's  endpoint reported  connections, indicating that the OAuth callback was not successfully saving the connection to the database. The root cause was suspected to be a problem where the backend (running in a preview environment) was configured to redirect to a production URL (), causing a mismatch.

The engineer adjusted the  in  to  and redeployed the backend, aiming to align the redirect URI. However, subsequent testing showed that the deployed production environment was still using an older configuration, redirecting to the preview URL.

To address the callback failure, the AI engineer added a simple logging statement to the callback function in  to diagnose if the callback endpoint is even being reached. This is the immediate step before the next redeployment.

The overall goal is to achieve persistent display of connected social accounts and enable automatic post publication, which is currently blocked by the inability to save social connections. On continue en français. A noter que la redirection après la connexion Facebook se fait sur la preview, il faut modifier pour pointer l'air la version déployée. 
</current_work>
<optional_next_step>
Redeploy the backend to production with the updated callback logging, then test the Facebook login flow to check backend logs for callback execution.
</optional_next_step>

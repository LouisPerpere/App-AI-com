<analysis>
The AI engineer successfully guided the Claire et Marcus PWA from a functional MVP to a more robust and feature-rich application. The trajectory shows a methodical approach, starting with critical bug fixes like the Écran blanc and auto-scroll issues, and progressively implementing new features. Key achievements include enhancing AI post generation with strict note prioritization and anti-promotion rules, improving image handling with cache fixes, and developing a comprehensive Social tab for Instagram integration. The engineer adeptly diagnosed and resolved complex frontend/backend synchronization problems, including database discrepancies between preview and production environments, culminating in a full data migration. The work demonstrates strong debugging skills and a responsive, user-centric development cycle.
</analysis>
<product_requirements>
The Claire et Marcus PWA automates social media for small businesses. Users need to generate Instagram calendars with visuals, text, and scheduling, based on business profiles, website analysis, uploads, and notes. Content should be balanced, audience-prioritized, and free of AI-generated language/excessive emojis, with post count adapting to . Users must modify generated posts, attach/modify visuals (from library, Pixabay, direct upload) with usage indicators, and handle carousels. Content organization requires monthly collapsible sections with improved UI/UX. The backend must handle  for images, persistently save business profiles, and support full post deletion. Interactive feedback includes spinners, progress overlays, and automatic page reload/scroll-to-modified-post. Recent additions include an Instagram integration roadmap (connect account, auto-publish, analytics), refined Coordonnées and Notes explanations, and a Privacy Policy page.
</product_requirements>
<key_technical_concepts>
-   **Full-stack Development**: React.js (Frontend), FastAPI (Backend), MongoDB/GridFS (Database).
-   **State Management**: , ,  in React.
-   **API Integration**: RESTful endpoints,  (frontend).
-   **LLM Integration**: OpenAI GPT (via ) for content generation.
-   **Data Handling**: MongoDB UUIDs, ISO strings for DateTime.
-   **UI/UX**: Tailwind CSS, Lucide React icons, Responsive design.
-   **OAuth**: Facebook/Instagram Graph API for social media integration.
</key_technical_concepts>
<code_architecture>

-   ****:
    -   **Importance**: Main FastAPI application.
    -   **Changes Made**:  now returns . Added Pydantic models for social connections (, ). Added new API endpoints (, , ) for social media integration. Added a  endpoint to serve the privacy policy HTML.
-   ****:
    -   **Importance**: Handles AI-driven social media post generation.
    -   **Changes Made**: Strengthened prompts (lines 682-685, 950-953, global message) to strictly prioritize monthly/general notes and forbid AI-invented promotions. Fixed  to preserve  instead of forcing draft (line 1160).
-   ****:
    -   **Importance**: Central React component.
    -   **Changes Made**: Debugged and rearranged variable declarations (, , ) to fix uninitialized variable error. Improved auto-scroll logic with separate  for tab navigation and scroll after posts load. Updated  to leverage . Added timestamp () to image  and  to  to fix image caching issues. Updated Coordonnées label to Infos contact pour vos posts in business profile. Added structured examples to Notes page, including Promotions. Modified header animation properties (, , , ). Implemented Social tab UI with states (, ), functions (, ), and integrated Lucide React icons (, , , ). Modified Instagram OAuth URL for Facebook Graph v18.0 (temporarily demo mode). Integrated  component, managing its display state and linking from Entreprise tab.
-   ****:
    -   **Importance**: Custom CSS.
    -   **Changes Made**: Added  for post modification visual feedback. Adjusted  animation for discretion and centering. Added responsive CSS for notes (, , ) and social tab buttons ( on mobile) to address overflow and layout issues (some aggressive changes were reverted).
-   ****:
    -   **Importance**: Handles user authentication.
    -   **Changes Made**: Debugged login button event handling; removed conflicting  and added debug logs.
-   ** (NEW)**:
    -   **Importance**: New component to display the application's privacy policy.
    -   **Changes Made**: Created with detailed RGPD-compliant text and basic styling.
-   ****:
    -   **Importance**: Environment variables.
    -   **Changes Made**: Updated  and  with user-provided keys.
</code_architecture>
<pending_tasks>
-   Diagnose and fix the carousel deletion issue.
-   Diagnose and fix the recurring photo modification issue (blue question mark).
-   Replace the demo mode for Instagram connection with the actual OAuth flow (requires user to complete Facebook Developers Console setup).
-   Implement the Valider (Validate) button to trigger automatic post publication on Instagram.
-   Implement the scheduling system for automated publications.
-   Implement the analytics dashboard for published posts.
-   Address the website analysis remaining issues (poor analysis quality, model verification, library import).
</pending_tasks>
<current_work>
Immediately before this summary request, the AI engineer successfully completed a critical data migration. The production database () was found to be empty for the user , while a separate preview environment held all the user's data (My Own Watch business profile, library, notes, posts). The engineer diagnosed that the production environment was pointing to an empty or new user ID. To resolve this, a comprehensive data migration process was executed to transfer all existing user data (business profile, 19 library items, 2 notes, 4 generated posts) from the preview environment's user ID () to the production environment's user ID (), transforming all references accordingly. Post-migration, the frontend was verified via screenshot, confirming that all My Own Watch data is now correctly displayed on . The connection for  is fully functional with all data restored.
</current_work>
<optional_next_step>
Diagnose and fix the Analyse de site web quality issue and verify the GPT model used for analysis. Continue en français. Vérifie qu'on utilise bien les clés API personnelles et non la clé emergent. Supprime la clé universelle emergent du code. Vérifie pourquoi le bouton connecter Instagram ne fait toujours aucune action
</optional_next_step>
